
PASS # AUDIT TASK RUNNER STARTED. 
FAIL Executing "attack" promise_test: Unhandled rejection with value: object "TypeError: undefined is not an object (evaluating 'mod.start')"
FAIL Executing "knee" promise_test: Unhandled rejection with value: object "TypeError: undefined is not an object (evaluating 'mod.start')"
FAIL Executing "ratio" promise_test: Unhandled rejection with value: object "TypeError: undefined is not an object (evaluating 'mod.start')"
FAIL Executing "release" promise_test: Unhandled rejection with value: object "TypeError: undefined is not an object (evaluating 'mod.start')"
FAIL Executing "threshold" promise_test: Unhandled rejection with value: object "TypeError: undefined is not an object (evaluating 'mod.start')"
PASS Audit report 
PASS > [attack] Dynamics compressor attack 
PASS   attack: refNode = new DynamicsCompressorNode(context) did not throw an exception. 
PASS   attack: tstNode = new DynamicsCompressorNode(context, {"attack":0}) did not throw an exception. 
PASS   attack: refNode[attack].setValueAtTime(refNode[attack].minValue, 0) did not throw an exception. 
PASS   attack: refNode[attack].linearRampToValueAtTime(refNode[attack].minValue, 0.25) did not throw an exception. 
FAIL X attack: mod = new ConstantSourceNode(context, {offset: 0}) incorrectly threw ReferenceError: "Can't find variable: ConstantSourceNode". assert_true: expected true got false
FAIL X attack: mod.offset.setValueAtTime(0, 0) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X attack: mod.offset.linearRampToValueAtTime(1, 0.25) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X attack: mod.connect(tstNode[attack]) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.connect')". assert_true: expected true got false
PASS > [knee] Dynamics compressor knee 
PASS   knee: refNode = new DynamicsCompressorNode(context) did not throw an exception. 
PASS   knee: tstNode = new DynamicsCompressorNode(context, {"knee":0}) did not throw an exception. 
PASS   knee: refNode[knee].setValueAtTime(refNode[knee].minValue, 0) did not throw an exception. 
PASS   knee: refNode[knee].linearRampToValueAtTime(refNode[knee].minValue, 0.25) did not throw an exception. 
FAIL X knee: mod = new ConstantSourceNode(context, {offset: 0}) incorrectly threw ReferenceError: "Can't find variable: ConstantSourceNode". assert_true: expected true got false
FAIL X knee: mod.offset.setValueAtTime(0, 0) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X knee: mod.offset.linearRampToValueAtTime(40, 0.25) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X knee: mod.connect(tstNode[knee]) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.connect')". assert_true: expected true got false
PASS > [ratio] Dynamics compressor ratio 
PASS   ratio: refNode = new DynamicsCompressorNode(context) did not throw an exception. 
PASS   ratio: tstNode = new DynamicsCompressorNode(context, {"ratio":1}) did not throw an exception. 
PASS   ratio: refNode[ratio].setValueAtTime(refNode[ratio].minValue, 0) did not throw an exception. 
PASS   ratio: refNode[ratio].linearRampToValueAtTime(refNode[ratio].minValue, 0.25) did not throw an exception. 
FAIL X ratio: mod = new ConstantSourceNode(context, {offset: 0}) incorrectly threw ReferenceError: "Can't find variable: ConstantSourceNode". assert_true: expected true got false
FAIL X ratio: mod.offset.setValueAtTime(0, 0) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X ratio: mod.offset.linearRampToValueAtTime(19, 0.25) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X ratio: mod.connect(tstNode[ratio]) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.connect')". assert_true: expected true got false
PASS > [release] Dynamics compressor release 
PASS   release: refNode = new DynamicsCompressorNode(context) did not throw an exception. 
PASS   release: tstNode = new DynamicsCompressorNode(context, {"release":0}) did not throw an exception. 
PASS   release: refNode[release].setValueAtTime(refNode[release].minValue, 0) did not throw an exception. 
PASS   release: refNode[release].linearRampToValueAtTime(refNode[release].minValue, 0.25) did not throw an exception. 
FAIL X release: mod = new ConstantSourceNode(context, {offset: 0}) incorrectly threw ReferenceError: "Can't find variable: ConstantSourceNode". assert_true: expected true got false
FAIL X release: mod.offset.setValueAtTime(0, 0) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X release: mod.offset.linearRampToValueAtTime(1, 0.25) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X release: mod.connect(tstNode[release]) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.connect')". assert_true: expected true got false
PASS > [threshold] Dynamics compressor threshold 
PASS   threshold: refNode = new DynamicsCompressorNode(context) did not throw an exception. 
PASS   threshold: tstNode = new DynamicsCompressorNode(context, {"threshold":-100}) did not throw an exception. 
PASS   threshold: refNode[threshold].setValueAtTime(refNode[threshold].minValue, 0) did not throw an exception. 
PASS   threshold: refNode[threshold].linearRampToValueAtTime(refNode[threshold].minValue, 0.25) did not throw an exception. 
FAIL X threshold: mod = new ConstantSourceNode(context, {offset: 0}) incorrectly threw ReferenceError: "Can't find variable: ConstantSourceNode". assert_true: expected true got false
FAIL X threshold: mod.offset.setValueAtTime(0, 0) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X threshold: mod.offset.linearRampToValueAtTime(100, 0.25) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.offset')". assert_true: expected true got false
FAIL X threshold: mod.connect(tstNode[threshold]) incorrectly threw TypeError: "undefined is not an object (evaluating 'mod.connect')". assert_true: expected true got false
FAIL # AUDIT TASK RUNNER FINISHED: 5 out of 5 tasks were failed. assert_true: expected true got false

